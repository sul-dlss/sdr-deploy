#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift 'lib'

require 'sdr_deploy'

# CLI for checking SSH connections
class CheckSsh < Thor
  default_task :check_ssh

  option :only,
         type: :array,
         default: [],
         desc: 'Update only these repos'

  option :except,
         type: :array,
         default: [],
         desc: 'Update all except these repos'

  option :skip_update,
         type: :boolean,
         default: false,
         desc: 'Skip update repos',
         aliases: '-s'

  option :environment,
         required: true,
         enum: ::Settings.supported_envs,
         banner: 'ENVIRONMENT',
         desc: "Environment (#{Settings.supported_envs})",
         aliases: '-e'

  desc 'check_ssh', 'check SSH connections'
  def check_ssh
    raise Thor::Error, 'Use only one of --only or --except' if options[:only].any? && options[:except].any?

    RepoUpdater.update(repos: repositories) unless options[:skip_update]
    SshChecker.check(environment: options[:environment], repos: repositories)
  end

  def self.exit_on_failure?
    true
  end

  private

  def repositories
    if options[:only].any?
      Settings.repositories.select { |repo| options[:only].include?(repo.name) }
    elsif options[:except].any?
      Settings.repositories.reject { |repo| options[:except].include?(repo.name) }
    else
      Setting.repositories
    end
  end
end

CheckSsh.start(ARGV)
