#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift 'lib'

require 'sdr_deploy'

# CLI for deployment
class Deploy < Thor
  default_task :deploy

  option :only,
         type: :array,
         default: [],
         desc: 'Update only these repos'

  option :except,
         type: :array,
         default: [],
         desc: 'Update all except these repos'

  option :cocina,
         type: :boolean,
         default: false,
         desc: 'Only update repos affected by new cocina-models gem release',
         aliases: '-c'

  option :skip_update,
         type: :boolean,
         default: false,
         desc: 'Skip update repos',
         aliases: '-s'

  option :environment,
         required: true,
         enum: Settings.supported_envs,
         banner: 'ENVIRONMENT',
         desc: "Environment (#{Settings.supported_envs})",
         aliases: '-e'

  desc 'deploy', 'deploy all the services in an environment'
  def deploy
    raise Thor::Error, 'Use only one of --only or --except' if options[:only].any? && options[:except].any?

    RepoUpdater.update(repos: repositories) unless options[:skip_update]
    abort 'ABORTING: multiple versions of the cocina-models gem are in use' unless CocinaChecker.check

    Deployer.deploy(environment: options[:environment], repos: repositories)
  end

  def self.exit_on_failure?
    true
  end

  private

  def repositories
    repos =
      if options[:cocina]
        Settings.repositories.select(&:cocina_models_update)
      else
        Settings.repositories
      end

    if options[:only].any?
      repos.select { |repo| options[:only].include?(repo.name) }
    elsif options[:except].any?
      repos.reject { |repo| options[:except].include?(repo.name) }
    else
      repos
    end
  end
end

def warning
  puts '*************************'
  puts 'WARNING! (added jan 2022)'
  puts "Argo is commented out in config/settings.yml since we don't want to"
  puts 'automatically deploy Argo to production during the Fedora removal workcycle!'
  puts 'Add back in when workcycle is complete.  You should still deploy Argo to qa/stage manually.'
  puts '*************************'
end

warning
Deploy.start(ARGV)
warning
